[
    {
        "path": "HW2/ConsoleApp1/ConsoleApp1/Program.cs",
        "start_line": 3,
        "end_line": 3,
        "original_start_line": 3,
        "original_end_line": 3,
        "body": "Я правильно понимаю, что я могу запустить, увидеть \"Hello World\", и поставить 0, поскольку задание было другое?\r\nЕсли программа просто предоставляет какой-то класс, нужно ставить `<OutputType>Library</OutputType>`. Но, если не умеете, можно было сделать хотя бы какую-нибудь заглушку -- многие, например, здесь запускают тесты (только не надо так делать -- у Вас NUnit, и это хорошо). Либо можно было сделать простенький консольный интерфейс.\r\n"
    },
    {
        "path": "HW2/ConsoleApp1/ConsoleApp1/Trie.cs",
        "start_line": 64,
        "end_line": 64,
        "original_start_line": 64,
        "original_end_line": 64,
        "body": "nit: вторая переменная нигде не используется. Необязательно давать ей такое сложное имя (ещё и не очень правильное с точки зрения английского языка):\r\n```suggestion\r\n        var (isElementInTree, _) = DeleteRecursively(this._root, element, 0);\r\n```"
    },
    {
        "path": "HW2/ConsoleApp1/ConsoleApp1/Trie.cs",
        "start_line": 72,
        "end_line": 72,
        "original_start_line": 72,
        "original_end_line": 72,
        "body": "Если функция фозвращает два `bool`, а называется не `IsAAndIsB`, лучше хоть где-то подписать, что они означают."
    },
    {
        "path": "HW2/ConsoleApp1/ConsoleApp1/Trie.cs",
        "start_line": 74,
        "end_line": 86,
        "original_start_line": 74,
        "original_end_line": 86,
        "body": "На мой взгляд так будет красивее:\r\n```suggestion\r\n        if (element.Lenght == numberOfLetter) {\r\n            return (node.IsTerminal, node.Children.Count > 0);\r\n        }\r\n```\r\nА куда здесь вставить `node.IsTerminal = false` -- это Вы придумайте."
    },
    {
        "path": "HW2/ConsoleApp1/ConsoleApp1/Trie.cs",
        "start_line": 107,
        "end_line": 140,
        "original_start_line": 107,
        "original_end_line": 140,
        "body": "Это будет работать за `O(|prefix|)` только если считать размер бора константой."
    },
    {
        "path": "HW2/ConsoleApp1/ConsoleApp1/Trie.cs",
        "start_line": 146,
        "end_line": 149,
        "original_start_line": 146,
        "original_end_line": 149,
        "body": "В условии сказано, что `Size` должен быть свойством. Подсказка: чтобы это было выполнено, строки 142--149 не нужны, надо просто поменять модификаторы доступа у `size`."
    }
]